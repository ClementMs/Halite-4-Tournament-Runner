"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * API for dimension's agents
 */
var express_1 = __importDefault(require("express"));
var error = __importStar(require("../../../../../error"));
var utils_1 = require("../../../../../../utils");
var router = express_1.default.Router();
/**
 * Gets agent by agentID in request. Requires a match to be stored
 */
exports.getAgent = function (req, res, next) {
    var agent;
    if (req.data.match.idToAgentsMap) {
        agent = req.data.match.idToAgentsMap.get(parseInt(req.params.agentID));
    }
    else {
        agent = req.data.match.agents[parseInt(req.params.agentID)];
    }
    if (!agent) {
        return next(new error.BadRequest("No match found with name or id of '" + req.params.matchID + "' in dimension " + req.data.dimension.id + " - '" + req.data.dimension.name + "'"));
    }
    req.data.agent = agent;
    next();
};
/**
 * Picks out relevant fields of the agent
 */
exports.pickAgent = function (agent) {
    var picked = utils_1.pick(agent, 'creationDate', 'id', 'name', 'src', 'status', 'tournamentID');
    return picked;
};
router.use('/:agentID', exports.getAgent);
/**
 * Get all agents in match
 */
router.get('/', function (req, res) {
    var agentData = req.data.match.agents.map(function (agent) { return exports.pickAgent(agent); });
    res.json({ error: null, agents: agentData });
});
/**
 * Get agent details
 */
router.get('/:agentID', function (req, res) {
    res.json({ error: null, agent: exports.pickAgent(req.data.agent) });
});
exports.default = router;
//# sourceMappingURL=index.js.map